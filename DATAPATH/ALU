`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 23.04.2025 23:40:31
// Design Name: 
// Module Name: ALU
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module ALU(
    input logic [31:0] SrcA, SrcB,
    input logic [3:0] ALUControl,//bits were not matching with other module earlier and caused ALUResult = 32'hx all the time
    output logic zero,
    output logic [31:0] ALUResult 
);
   
        
        always @(*) begin
            $display("Time = %0t, SrcA =%d, SrcB=%d,ALUControl=%d,ALUResult=%d",$time,SrcA, SrcB,ALUControl,ALUResult );
        case(ALUControl)
            4'b0000: ALUResult = SrcA & SrcB; // AND operation
            4'b0001: ALUResult = SrcA | SrcB; // OR operation
            4'b0010: ALUResult = SrcA + SrcB; // Addition
            4'b0110: ALUResult = SrcA - SrcB; // Subtraction
            4'b1100: ALUResult = SrcA^SrcB; // NOR
            4'b0100: ALUResult = ($signed(SrcA) < $signed(SrcB)) ? 32'b1 : 32'b0; // SLT (Signed Less Than)
            4'b0111: ALUResult = (SrcA < SrcB) ? 32'b1 : 32'b0; // SLTU (Unsigned Less Than)
            default: ALUResult = 32'hx; // DONT CARE
        endcase

         // Zero flag is set only if SrcA - SrcB == 0 (used for BEQ)
        zero = (SrcA - SrcB == 32'b0) ? 1'b1 : 1'b0;
    end
endmodule
